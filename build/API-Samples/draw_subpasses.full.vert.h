#include <stdint.h>

#if 0
/home/maac/Desktop/VulkanSamples/API-Samples/draw_subpasses/draw_subpasses.full.vert
// Module Version 10000
// Generated by (magic number): 80007
// Id's are bound by 39

                              Capability Shader
               1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 4  "main" 9 19 31
                              Source GLSL 400
                              SourceExtension  "GL_ARB_separate_shader_objects"
                              SourceExtension  "GL_ARB_shading_language_420pack"
                              Name 4  "main"
                              Name 9  "outColor"
                              Name 17  "gl_PerVertex"
                              MemberName 17(gl_PerVertex) 0  "gl_Position"
                              MemberName 17(gl_PerVertex) 1  "gl_PointSize"
                              MemberName 17(gl_PerVertex) 2  "gl_ClipDistance"
                              Name 19  ""
                              Name 31  "gl_VertexIndex"
                              Name 34  "indexable"
                              Decorate 9(outColor) Location 0
                              MemberDecorate 17(gl_PerVertex) 0 BuiltIn Position
                              MemberDecorate 17(gl_PerVertex) 1 BuiltIn PointSize
                              MemberDecorate 17(gl_PerVertex) 2 BuiltIn ClipDistance
                              Decorate 17(gl_PerVertex) Block
                              Decorate 31(gl_VertexIndex) BuiltIn VertexIndex
               2:             TypeVoid
               3:             TypeFunction 2
               6:             TypeFloat 32
               7:             TypeVector 6(float) 4
               8:             TypePointer Output 7(fvec4)
     9(outColor):      8(ptr) Variable Output
              10:    6(float) Constant 1065353216
              11:    6(float) Constant 1036831949
              12:    6(float) Constant 1056964608
              13:    7(fvec4) ConstantComposite 10 11 11 12
              14:             TypeInt 32 0
              15:     14(int) Constant 1
              16:             TypeArray 6(float) 15
17(gl_PerVertex):             TypeStruct 7(fvec4) 6(float) 16
              18:             TypePointer Output 17(gl_PerVertex)
              19:     18(ptr) Variable Output
              20:             TypeInt 32 1
              21:     20(int) Constant 0
              22:     14(int) Constant 4
              23:             TypeArray 7(fvec4) 22
              24:    6(float) Constant 3212836864
              25:    7(fvec4) ConstantComposite 24 24 12 10
              26:    7(fvec4) ConstantComposite 10 24 12 10
              27:    7(fvec4) ConstantComposite 24 10 12 10
              28:    7(fvec4) ConstantComposite 10 10 12 10
              29:          23 ConstantComposite 25 26 27 28
              30:             TypePointer Input 20(int)
31(gl_VertexIndex):     30(ptr) Variable Input
              33:             TypePointer Function 23
              35:             TypePointer Function 7(fvec4)
         4(main):           2 Function None 3
               5:             Label
   34(indexable):     33(ptr) Variable Function
                              Store 9(outColor) 13
              32:     20(int) Load 31(gl_VertexIndex)
                              Store 34(indexable) 29
              36:     35(ptr) AccessChain 34(indexable) 32
              37:    7(fvec4) Load 36
              38:      8(ptr) AccessChain 19 21
                              Store 38 37
                              Return
                              FunctionEnd
#endif

static const uint32_t draw_subpasses_full_vert[295] = {
    0x07230203, 0x00010000, 0x00080007, 0x00000027,
    0x00000000, 0x00020011, 0x00000001, 0x0006000b,
    0x00000001, 0x4c534c47, 0x6474732e, 0x3035342e,
    0x00000000, 0x0003000e, 0x00000000, 0x00000001,
    0x0008000f, 0x00000000, 0x00000004, 0x6e69616d,
    0x00000000, 0x00000009, 0x00000013, 0x0000001f,
    0x00030003, 0x00000002, 0x00000190, 0x00090004,
    0x415f4c47, 0x735f4252, 0x72617065, 0x5f657461,
    0x64616873, 0x6f5f7265, 0x63656a62, 0x00007374,
    0x00090004, 0x415f4c47, 0x735f4252, 0x69646168,
    0x6c5f676e, 0x75676e61, 0x5f656761, 0x70303234,
    0x006b6361, 0x00040005, 0x00000004, 0x6e69616d,
    0x00000000, 0x00050005, 0x00000009, 0x4374756f,
    0x726f6c6f, 0x00000000, 0x00060005, 0x00000011,
    0x505f6c67, 0x65567265, 0x78657472, 0x00000000,
    0x00060006, 0x00000011, 0x00000000, 0x505f6c67,
    0x7469736f, 0x006e6f69, 0x00070006, 0x00000011,
    0x00000001, 0x505f6c67, 0x746e696f, 0x657a6953,
    0x00000000, 0x00070006, 0x00000011, 0x00000002,
    0x435f6c67, 0x4470696c, 0x61747369, 0x0065636e,
    0x00030005, 0x00000013, 0x00000000, 0x00060005,
    0x0000001f, 0x565f6c67, 0x65747265, 0x646e4978,
    0x00007865, 0x00050005, 0x00000022, 0x65646e69,
    0x6c626178, 0x00000065, 0x00040047, 0x00000009,
    0x0000001e, 0x00000000, 0x00050048, 0x00000011,
    0x00000000, 0x0000000b, 0x00000000, 0x00050048,
    0x00000011, 0x00000001, 0x0000000b, 0x00000001,
    0x00050048, 0x00000011, 0x00000002, 0x0000000b,
    0x00000003, 0x00030047, 0x00000011, 0x00000002,
    0x00040047, 0x0000001f, 0x0000000b, 0x0000002a,
    0x00020013, 0x00000002, 0x00030021, 0x00000003,
    0x00000002, 0x00030016, 0x00000006, 0x00000020,
    0x00040017, 0x00000007, 0x00000006, 0x00000004,
    0x00040020, 0x00000008, 0x00000003, 0x00000007,
    0x0004003b, 0x00000008, 0x00000009, 0x00000003,
    0x0004002b, 0x00000006, 0x0000000a, 0x3f800000,
    0x0004002b, 0x00000006, 0x0000000b, 0x3dcccccd,
    0x0004002b, 0x00000006, 0x0000000c, 0x3f000000,
    0x0007002c, 0x00000007, 0x0000000d, 0x0000000a,
    0x0000000b, 0x0000000b, 0x0000000c, 0x00040015,
    0x0000000e, 0x00000020, 0x00000000, 0x0004002b,
    0x0000000e, 0x0000000f, 0x00000001, 0x0004001c,
    0x00000010, 0x00000006, 0x0000000f, 0x0005001e,
    0x00000011, 0x00000007, 0x00000006, 0x00000010,
    0x00040020, 0x00000012, 0x00000003, 0x00000011,
    0x0004003b, 0x00000012, 0x00000013, 0x00000003,
    0x00040015, 0x00000014, 0x00000020, 0x00000001,
    0x0004002b, 0x00000014, 0x00000015, 0x00000000,
    0x0004002b, 0x0000000e, 0x00000016, 0x00000004,
    0x0004001c, 0x00000017, 0x00000007, 0x00000016,
    0x0004002b, 0x00000006, 0x00000018, 0xbf800000,
    0x0007002c, 0x00000007, 0x00000019, 0x00000018,
    0x00000018, 0x0000000c, 0x0000000a, 0x0007002c,
    0x00000007, 0x0000001a, 0x0000000a, 0x00000018,
    0x0000000c, 0x0000000a, 0x0007002c, 0x00000007,
    0x0000001b, 0x00000018, 0x0000000a, 0x0000000c,
    0x0000000a, 0x0007002c, 0x00000007, 0x0000001c,
    0x0000000a, 0x0000000a, 0x0000000c, 0x0000000a,
    0x0007002c, 0x00000017, 0x0000001d, 0x00000019,
    0x0000001a, 0x0000001b, 0x0000001c, 0x00040020,
    0x0000001e, 0x00000001, 0x00000014, 0x0004003b,
    0x0000001e, 0x0000001f, 0x00000001, 0x00040020,
    0x00000021, 0x00000007, 0x00000017, 0x00040020,
    0x00000023, 0x00000007, 0x00000007, 0x00050036,
    0x00000002, 0x00000004, 0x00000000, 0x00000003,
    0x000200f8, 0x00000005, 0x0004003b, 0x00000021,
    0x00000022, 0x00000007, 0x0003003e, 0x00000009,
    0x0000000d, 0x0004003d, 0x00000014, 0x00000020,
    0x0000001f, 0x0003003e, 0x00000022, 0x0000001d,
    0x00050041, 0x00000023, 0x00000024, 0x00000022,
    0x00000020, 0x0004003d, 0x00000007, 0x00000025,
    0x00000024, 0x00050041, 0x00000008, 0x00000026,
    0x00000013, 0x00000015, 0x0003003e, 0x00000026,
    0x00000025, 0x000100fd, 0x00010038,
};
